dependencies {
    compileOnly(project(':common'))
    compileOnly(project(':tooling:entrypoint-spoof'))
}

tasks.withType(ProcessResources).configureEach {
    filesMatching([
            'plugin.yml',
            'bungee.yml',
            'fabric.mod.json', "${project.project_id}.mixins.json".toString(),
            'META-INF/mods.toml', 'mcmod.info', 'pack.mcmeta',
            'META-INF/sponge_plugins.json',
            'velocity-plugin.json'
    ]) {
        expand project.properties
    }
}

jar {
    exclude('dev/neuralnexus/taterlib/bukkit')
    exclude('dev/neuralnexus/taterlib/bungee')
    exclude('dev/neuralnexus/taterlib/fabric')
    exclude('dev/neuralnexus/taterlib/forge')
    exclude('dev/neuralnexus/taterlib/neoforge')
    exclude('dev/neuralnexus/taterlib/sponge')
    exclude('dev/neuralnexus/taterlib/velocity')

    exclude('fabric.mod.json')
    exclude('META-INF/mods.toml')
    exclude('mcmod.info')
    exclude('pack.mcmeta')
//    exclude('META-INF/sponge_plugins.json')
    exclude('velocity-plugin.json')

    destinationDirectory = file('../../target')
    archiveFileName = "${project_id}-loader-${loader_version}.jar"
}

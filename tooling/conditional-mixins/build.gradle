plugins {
    id('maven-publish')
    alias(libs.plugins.shadow)
    alias(libs.plugins.spotless)
}

dependencies {
    compileOnly('org.spongepowered:mixin:0.8.5')
    compileOnly('org.ow2.asm:asm-tree:6.2')
    compileOnly(project(':tooling:entrypoint-spoof'))
    implementation(project(':tooling:loader'))
}

jar {
    "conditional-mixins-${conditional_mixins_version}.jar"
}

shadowJar {
    dependencies {
        include(project(':tooling:loader'))
        exclude('plugin.yml')
        exclude('bungee.yml')
        exclude('fabric.mod.json')
        exclude('META-INF/mods.toml')
        exclude('mcmod.info')
        exclude('pack.mcmeta')
        exclude('META-INF/sponge_plugins.json')
        exclude('velocity-plugin.json')
        exclude('TaterLib.png.gz')
    }

    minimize() {
        exclude('dev.neuralnexus.conditionalmixins')
    }

    archiveFileName = "conditional-mixins-${conditional_mixins_version}-full.jar"

    manifest {
        attributes 'Specification-Title': 'Conditional Mixins',
                'Specification-Version': version,
                'Specification-Vendor': 'NeualNexus',
                'Implementation-Version': version,
                'Implementation-Vendor': 'NeualNexus',
                'Implementation-Timestamp': new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
    }

    from(["README.md"]) {
        into("META-INF")
    }
}

spotless {
    format 'misc', {
        target '*.gradle', '.gitattributes', '.gitignore'

        trimTrailingWhitespace()
        indentWithSpaces()
        endWithNewline()
    }
    java {
        importOrder()
        removeUnusedImports()
        cleanthat()
        googleJavaFormat('1.17.0').aosp().formatJavadoc(true).reorderImports(true)
        formatAnnotations()
        licenseHeader """/**
 * Copyright (c) \$YEAR Dylan Sperrer - dylan@sperrer.ca
 * The project is Licensed under <a href="https://github.com/p0t4t0sandwich/TaterLib/blob/dev/LICENSE">GPL-3</a>
 * The API is Licensed under <a href="https://github.com/p0t4t0sandwich/TaterLib/blob/dev/LICENSE-API">MIT</a>
 */

"""
    }
}

publishing {
    publications {
        entryPointSpoof(MavenPublication) {
            groupId = group_id
            version = "${conditional_mixins_version}"

            artifact(shadowJar) {
                artifactId = "conditional-mixins"
            }

            pom {
                name = 'conditional-mixins'
                description = 'A mixin plugin and annotation set that allow you to apply mixins based on the platform, loaded plugins/mods, and minecraft version'
                url = 'https://github.com/p0t4t0sandwich/TaterLib/tree/main/tooling/entrypoint-spoof/README.md'
                licenses {
                    license {
                        name = 'GPL-3'
                        url = 'https://github.com/p0t4t0sandwich/TaterLib/blob/main/LICENSE'
                    }
                }
                developers {
                    developer {
                        id = 'p0t4t0sandwich'
                        name = 'Dylan Sperrer'
                        email = 'dylan@neuralnexus.dev'
                    }
                }
                scm {
                    connection = 'scm:git:https://github.com/p0t4t0sandwich/TaterLib.git'
                    url = 'https://github.com/p0t4t0sandwich/TaterLib'
                }
            }
        }
    }

    repositories {
        mavenLocal()
        maven {
            name = "NeuralNexusReleases"
            url = "https://maven.neuralnexus.dev/releases"
            credentials {
                username = project.findProperty("neuralNexusUsername") ?: System.getenv("NEURALNEXUS_USERNAME")
                password = project.findProperty("neuralNexusPassword") ?: System.getenv("NEURALNEXUS_PASSWORD")
            }
        }
    }
}

tasks.build.dependsOn(spotlessApply)

artifacts {
    archives(shadowJar)
}

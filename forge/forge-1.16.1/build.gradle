plugins {
    alias(libs.plugins.shadow)
    alias(libs.plugins.unimined)
}

unimined.minecraft(sourceSets.main) {
    version(minecraft_version)
    minecraftForge {
        loader(forge_version)
        mixinConfig("taterlib.mixins.v1_16_2.forge.json")
    }
    mappings {
        mojmap()
        stub.withMappings("searge", ["mojmap"]) {
            // Fix borrowed from https://github.com/CDAGaming/CraftPresence-Mirror/blob/0388d7bdc99440a3c2c317ab59cf728c9033b5da/build.gradle.kts#L253
            c("dng", ["net/minecraft/client/gui/widget/Widget", "net/minecraft/client/gui/components/AbstractWidget"]) {
                m("e", "()I", "func_238483_d_", "getHeightRealms")
            }
            // net.minecraft.advancements.CriteriaTriggers func_192118_a(Lnet/minecraft/advancements/ICriterionTrigger;)Lnet/minecraft/advancements/ICriterionTrigger
            c("register", ["net/minecraft/advancements/CriteriaTriggers"]) {
                m("a", "(Lnet/minecraft/advancements/ICriterionTrigger;)Lnet/minecraft/advancements/ICriterionTrigger;", "func_192118_a", "registerRenamedNoConflict")
            }
        }
    }
//    defaultRemapJar = true
    defaultRemapJar = false
    remap(shadowJar) {
        prodNamespace("searge")
        mixinRemap {
            disableRefmap()
        }
    }
}

dependencies {
    compileOnly('org.spongepowered:mixin:0.8.5')
    compileOnly(project(':api'))
    compileOnly(project(':common'))
    compileOnly(project(':tooling:conditional-mixins'))
    compileOnly(project(':tooling:loader'))
    compileOnly(project(':forge:forge-utils-modern'))
    implementation(project(":vanilla:vanilla-1.16"))
}

shadowJar {
    dependencies {
        include(project(":vanilla:vanilla-1.16"))
    }
    relocate("dev.neuralnexus.taterlib.v1_16.vanilla", "dev.neuralnexus.taterlib.v1_16.vanilla.forge")
    archiveFileName = "${project_id}-forge-${minecraft_version}-${version}.jar"
}

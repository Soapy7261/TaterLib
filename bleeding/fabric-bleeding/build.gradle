import net.fabricmc.loom.task.RemapJarTask

plugins {
    id('fabric-loom') version('1.4-SNAPSHOT')
}

java.toolchain.languageVersion = JavaLanguageVersion.of(java_version)
sourceCompatibility = targetCompatibility = java_version

dependencies {
    compileOnly(project(':common'))
    implementation(project(':bleeding:vanilla-bleeding'))

    minecraft("com.mojang:minecraft:${project.minecraft_version}")
    mappings loom.layered() {
        officialMojangMappings()
        parchment("org.parchmentmc.data:parchment-1.20.3:${mapping_version}@zip")
    }
    modImplementation("net.fabricmc:fabric-loader:${project.loader_version}")

    // Lucko's Permissions API
    include(modImplementation('me.lucko:fabric-permissions-api:0.2-SNAPSHOT'))
}

tasks.withType(ProcessResources).configureEach {
    filesMatching(['fabric.mod.json', "${project_id}.mixins.fabric.bleeding.json".toString()]) {
        expand project.properties
    }
}

loom {
    accessWidenerPath = file("src/main/resources/${project_id}.fabric.accesswidener")
//    mixin {
//        defaultRefmapName.set("${project_id}.mixins.fabric.bleeding.refmap.json")
//    }
}

shadowJar {
    dependencies {
        include(project(':bleeding:vanilla-bleeding'))
        exclude('/mappings/*')
    }
    relocate("${group_id}.${project_id}.vanilla", "${group_id}.${project_id}.vanilla.fabric")
}

task remappedShadowJar(type: RemapJarTask) {
    dependsOn(tasks.shadowJar)
    input = tasks.shadowJar.archiveFile
    destinationDirectory = file('../../target')
    archiveFileName = "${project_id}-fabric-bleeding-${version}.jar"
}

tasks.build.dependsOn(tasks.remappedShadowJar)

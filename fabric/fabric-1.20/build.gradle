import net.fabricmc.loom.task.RemapJarTask

plugins {
    id('fabric-loom') version('1.4-SNAPSHOT')
}

java.toolchain.languageVersion = JavaLanguageVersion.of(java_version)
sourceCompatibility = targetCompatibility = java_version

dependencies {
    minecraft("com.mojang:minecraft:${project.minecraft_version}")
    mappings loom.officialMojangMappings()
    modImplementation("net.fabricmc:fabric-loader:${project.loader_version}")

    // Fabric API
    Set<String> apiModules = [
            'fabric-command-api-v2',
            'fabric-lifecycle-events-v1'
    ]

    apiModules.forEach {
        modImplementation(fabricApi.module(it, project.fabric_version))
    }

    // Lucko's Permissions API
    include(modImplementation('me.lucko:fabric-permissions-api:0.2-SNAPSHOT'))

    compileOnly(project(':common'))
    implementation(project(':vanilla:vanilla-1.20'))
}

tasks.withType(ProcessResources).configureEach {
    filesMatching([
            'fabric.mod.json',
            "${project_id}.mixins.fabric.v1_20.json".toString()
    ]) {
        expand project.properties
    }
}

loom {
    mixin {
        defaultRefmapName.set("${project_id}.mixins.fabric.v1_20.refmap.json")
    }
}

shadowJar {
    dependencies {
        include(project(':vanilla:vanilla-1.20'))
//        exclude("${group_id}.${project_id}.vanilla.mixin.listeners")
        exclude('/mappings/*')
    }
    // Cheap trick to get rid of mixin.listeners, since the exclude above doesn't work
    relocate("${group_id}.${project_id}.v1_20.vanilla.mixin.listeners", "${group_id}.${project_id}.v1_20.vanilla.fabric.mixin.fake")
    relocate("${group_id}.${project_id}.v1_20.vanilla.fabric", "${group_id}.${project_id}.v1_20.vanilla.fabric")
    relocate("${group_id}.${project_id}.v1_20.vanilla", "${group_id}.${project_id}.v1_20.vanilla.fabric")
}

task remappedShadowJar(type: RemapJarTask) {
    dependsOn(tasks.shadowJar)
    input = tasks.shadowJar.archiveFile
    archiveFileName = "${project_id}-fabric-${minecraft_version}-${version}.jar"
}

tasks.assemble.dependsOn('remappedShadowJar')

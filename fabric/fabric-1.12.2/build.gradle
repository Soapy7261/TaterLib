plugins {
    alias(libs.plugins.loom)
}

base {
    archivesName = "${project_id}-fabric-${minecraft_version}"
}

dependencies {
    minecraft("com.mojang:minecraft:${project.minecraft_version}")
    mappings("net.legacyfabric:yarn:${project.yarn_mappings}:v2")
    modImplementation("net.fabricmc:fabric-loader:${project.loader_version}")

//    Set<String> apiModules = [
//            'legacy-fabric-api-base',
//            'legacy-fabric-command-api-v2',
//            'legacy-fabric-lifecycle-events-v1',
//            'legacy-fabric-networking-api-v1',
//            'legacy-fabric-permissions-api-v1'
//    ]
//    apiModules.forEach {
//        modImplementation(legacy.apiModule(it, project.fabric_version))
//    }
    modImplementation("net.legacyfabric.legacy-fabric-api:legacy-fabric-api:${project.fabric_version}")

    compileOnly(project(':api'))
    compileOnly(project(':common'))
    compileOnly(project(':tooling:loader'))
}

tasks.withType(ProcessResources).configureEach {
    filesMatching(['fabric.mod.json', "taterlib.mixins.fabric.v1_12_2.json".toString()]) {
        expand project.properties
    }
}

loom.mixin.useLegacyMixinAp = false

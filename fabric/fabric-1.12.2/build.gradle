plugins {
    id('fabric-loom') version('1.6-SNAPSHOT')
    id('legacy-looming') version('1.6-SNAPSHOT')
}

base {
    archivesName = "${project_id}-fabric-${minecraft_version}"
}

dependencies {
    compileOnly(project(':common'))

    // Minecraft and Fabric mappings
    minecraft("com.mojang:minecraft:${project.minecraft_version}")
    mappings("net.legacyfabric:yarn:${project.yarn_mappings}:v2")
    modImplementation("net.fabricmc:fabric-loader:${project.loader_version}")

    // Legacy Fabric API
    Set<String> apiModules = [
            'legacy-fabric-api-base',
            'legacy-fabric-command-api-v2',
            'legacy-fabric-lifecycle-events-v1',
            'legacy-fabric-networking-api-v1',
            'legacy-fabric-permissions-api-v1'
    ]

    apiModules.forEach {
        modImplementation(legacy.apiModule(it, project.fabric_version))
    }
}

tasks.withType(ProcessResources).configureEach {
    filesMatching(['fabric.mod.json', "taterlib.mixins.fabric.v1_12_2.json".toString()]) {
        expand project.properties
    }
}

loom.mixin.useLegacyMixinAp = false

plugins {
    alias(libs.plugins.shadow)
    alias(libs.plugins.unimined)
}

java.toolchain.languageVersion = JavaLanguageVersion.of(java_version)
sourceCompatibility = targetCompatibility = java_version

unimined.minecraft(sourceSets.main) {
    version(minecraft_version)
    fabric {
        loader(loader_version)
    }
    mappings {
        mojmap()
    }
    defaultRemapJar = false
    remap(shadowJar) {
        prodNamespace("intermediary")
        mixinRemap {
            disableRefmap()
        }
    }
}

dependencies {
    compileOnly(project(':api'))
    compileOnly(project(':common'))
    compileOnly(project(':tooling:conditional-mixins'))
    compileOnly(project(':tooling:loader'))
    compileOnly(project(':vanilla:vanilla-1.20'))
    implementation(project(':vanilla:vanilla-1.20.2'))
}

shadowJar {
    dependencies {
        include(project(':vanilla:vanilla-1.20.2'))
        exclude('/mappings/*')
    }
    relocate("dev.neuralnexus.taterlib.v1_20.vanilla", "dev.neuralnexus.taterlib.v1_20.vanilla.fabric")
    relocate("dev.neuralnexus.taterlib.v1_20_2.vanilla", "dev.neuralnexus.taterlib.v1_20_2.vanilla.fabric")
}

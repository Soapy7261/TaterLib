plugins {
    id('net.neoforged.gradle.userdev') version('7.0.80')
}

base {
    archivesName = "${project_id}-neoforge-${minecraft_version}"
}

java.toolchain.languageVersion = JavaLanguageVersion.of(java_version)
sourceCompatibility = targetCompatibility = java_version

subsystems {
    parchment {
        minecraftVersion = minecraft_version
        mappingsVersion = mapping_version
    }
}

minecraft.accessTransformers.file file('src/main/resources/META-INF/neoforge.accesstransformer.cfg')

// MinecraftServerMixin_1_20
minecraft.accessTransformers.entry 'public net.minecraft.server.MinecraftServer resources # resources'
minecraft.accessTransformers.entry 'public net.minecraft.server.MinecraftServer$ReloadableResources managers()net.minecraft.server.ReloadableServerResources # managers'

// PlayerAdvancementsMixin_1_20_2
minecraft.accessTransformers.entry 'public net.minecraft.server.PlayerAdvancements player # player'

// ServerCommonPacketListenerImplMixin_1_20_2
minecraft.accessTransformers.entry 'public net.minecraft.server.network.ServerCommonPacketListenerImpl server # server'

dependencies {
    compileOnly("net.neoforged:neoforge:${neo_version}")
    compileOnly(project(':common'))
}

tasks.withType(ProcessResources).configureEach {
    filesMatching(['META-INF/mods.toml', 'pack.mcmeta']) {
        expand project.properties
    }
}
